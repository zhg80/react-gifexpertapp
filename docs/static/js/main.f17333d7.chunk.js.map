{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCPlBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbC,EAHa,0DAG6CC,UAAUH,GAHvD,sDAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAIhC,OAFAN,QAAQC,IAAI,CAACe,QAAMV,QAGf,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECLwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MACG,SAAAC,GACQ7B,QAAQC,IAAI4B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG9B,CAACpB,IAGGqB,EDfwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAmCpB,OAjCAxB,QAAQC,IAAIuB,GAkCR,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,EAAU,mBAAGJ,UAAU,mCAAb,uBAA+D,6CAC3E,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OAEf,aADA,CACC,EAAD,eAEYA,GADGA,EAAIC,aEhD9BgB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAUA,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,Y,MCvBjC6B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAG1BpC,QAAQC,IAAI,gB","file":"static/js/main.f17333d7.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        console.log(e.target.value)\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log('Submit hecho');\n        if(inputValue.trim().length>2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit } >\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async(category) => {\n\n    //const url = 'https://api.giphy.com/v1/gifs/search?limit=10&q=Rick+and+Morty&api_key=TEIFDVY5ulWzqSEAp0kLepuEqWPacwaC';\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=TEIFDVY5ulWzqSEAp0kLepuEqWPacwaC`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    //console.log(data);\n    //console.log(gifs);\n    //setImages( gifs );\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {title,url} ) => {\n    \n    console.log({title,url});\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p> {title} </p>\n        </div>\n    )\n}\n\n","//import React, {useState, useEffect} from 'react';\nimport React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n//import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    console.log(loading);\n\n/*    const [images, setImages] = useState([]);\n\n    useEffect( () =>{\n        //getGifs();\n        getGifs(category)\n            .then( imgs => setImages(imgs));\n    }, [category])\n*/\n    /*\n    const getGifs = async() => {\n\n        //const url = 'https://api.giphy.com/v1/gifs/search?limit=10&q=Rick+and+Morty&api_key=TEIFDVY5ulWzqSEAp0kLepuEqWPacwaC';\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=TEIFDVY5ulWzqSEAp0kLepuEqWPacwaC`;\n        const resp = await fetch( url );\n        const {data} = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n        //console.log(data);\n        console.log(gifs);\n        setImages( gifs );\n    }\n*/\n    //getGifs();\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading ? <p className=\"animate__animated animate__flash\">Loading..</p>: <p>Data cargada</p>}\n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                        // <li key = {id} > { title } </li>\n                        <GifGridItem \n                                key = {img.id}\n                                {...img}\n                            />\n                        ))\n                    }\n                \n            </div> \n            \n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() =>  {\n\n        getGifs(category)\n            .then(\n                imgs => {\n                        console.log(imgs);  \n                        setState({\n                            data: imgs,\n                            loading: false\n                        });    \n            })\n    }, [category])\n\n\n    return state;\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n    /*\n    const handleAdd = () =>{\n        //setCategories([...categories, 'HunterXHunter']);\n        setCategories( cats => [...cats,  'HunterXHunter']);\n        console.log(categories);\n    }\n    */\n   // console.log(categories);\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            \n            <AddCategory setCategories = {setCategories} />\n            <hr/>\n\n            <ol>\n                { \n                    categories.map( category => \n                        //<li key={category}> {category} </li>      \n                        <GifGrid \n                            key={category}\n                            category={category} \n                        />\n                    )\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />\n ,\n  document.getElementById('root')\n);\n\nconsole.log('hola mundo');"],"sourceRoot":""}